<!-- views/user/register.ejs -->
<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>Register</title>
  <!-- Bootstrap CSS (skip if already in your userHead.ejs) -->
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
  <script src="https://kit.fontawesome.com/a076d05399.js" crossorigin="anonymous"></script>
</head>

<body>
  <section class="text-center text-lg-start">
    <style>
      .cascading-right {
        margin-right: -50px;
      }

      @media (max-width: 991.98px) {
        .cascading-right {
          margin-right: 0;
        }
      }
    </style>

    <div class="container py-4">
      <div class="row g-0 align-items-center">
        <div class="col-lg-6 mb-5 mb-lg-0">
          <div class="card cascading-right bg-body-tertiary" style="backdrop-filter: blur(30px);">
            <div class="card-body p-5 shadow-5 text-center">
              <h2 class="fw-bold mb-5">Sign up now</h2>

              <form action="/register" method="POST" id="registerForm">

                <div id="errorMsg" class="alert alert-danger d-none"></div>

                <div class="row">
                  <div class="col-md-6 mb-4">
                    <div class="form-outline">
                      <input type="text" name="firstName" id="firstName" class="form-control" required />
                      <label class="form-label" for="firstName">First name</label>
                    </div>
                  </div>
                  <div class="col-md-6 mb-4">
                    <div class="form-outline">
                      <input type="text" name="lastName" id="lastName" class="form-control" required />
                      <label class="form-label" for="lastName">Last name</label>
                    </div>
                  </div>
                </div>

                <div class="form-outline mb-4">
                  <input type="email" name="email" id="email" class="form-control" required />
                  <label class="form-label" for="email">Email address</label>
                </div>

                <div class="form-outline mb-4">
                  <input type="password" name="password" id="password" class="form-control" required />
                  <label class="form-label" for="password">Password</label>
                </div>

                <div class="form-outline mb-4">
  <input type="password" name="confirmPassword" id="confirmPassword" class="form-control" required />
  <label class="form-label" for="confirmPassword">Confirm Password</label>
</div>

  <div class="form-outline">
    <input type="text" name="referredBy" id="referredBy" class="form-control" />
    <label class="form-label" for="referredBy">Referral Code (Optional)</label>
  </div>



<button type="submit" class="btn btn-primary btn-block mb-4">Sign Up & Send OTP</button>

                <div class="text-center">
                  <p>or sign up with:</p>
                  <a href="/auth/google" class="btn btn-danger">
                    <i class="fab fa-google me-2"></i> Sign Up with Google
                  </a>
                </div>
              </form>
            </div>
          </div>
        </div>

        <div class="col-lg-6 mb-5 mb-lg-0">
          <img src="https://mdbootstrap.com/img/new/ecommerce/vertical/004.jpg" class="w-100 rounded-4 shadow-4" alt="Signup illustration" />
        </div>
      </div>
    </div>
  </section>

  <!-- Bootstrap JS (if needed) -->
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
<script>
  function getElement(id) {
    return document.getElementById(id);
  }

  function showError(input, message) {
    input.classList.add('is-invalid');
    input.classList.remove('is-valid');

    if (!input.nextElementSibling || !input.nextElementSibling.classList.contains('invalid-feedback')) {
      const errorDiv = document.createElement('div');
      errorDiv.className = 'invalid-feedback';
      errorDiv.innerText = message;
      input.parentNode.appendChild(errorDiv);
    } else {
      input.nextElementSibling.innerText = message;
    }
  }

  function clearError(input) {
    input.classList.remove('is-invalid');
    input.classList.add('is-valid');

    if (input.nextElementSibling && input.nextElementSibling.classList.contains('invalid-feedback')) {
      input.nextElementSibling.remove();
    }
  }

  function validateField(input, name) {
    const value = input.value.trim();
    if (value === '' || /\s/.test(value)) {
      showError(input, `${name} cannot be empty or contain spaces`);
      return false;
    }
    clearError(input);
    return true;
  }

  function validateEmail(emailInput) {
    const email = emailInput.value.trim();
    const regex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;

    if (!regex.test(email)) {
      showError(emailInput, 'Please enter a valid email');
      return false;
    }
    clearError(emailInput);
    return true;
  }

  function validatePasswords(passwordInput, confirmPasswordInput) {
    const password = passwordInput.value.trim();
    const confirmPassword = confirmPasswordInput.value.trim();

    clearError(passwordInput);
    clearError(confirmPasswordInput);

    if (/\s/.test(password)) {
      showError(passwordInput, 'Password cannot contain spaces');
      return false;
    }

    if (password.length < 6) {
      showError(passwordInput, 'Password must be at least 6 characters');
      return false;
    }

    if (password !== confirmPassword) {
      showError(confirmPasswordInput, 'Passwords do not match');
      return false;
    }

    return true;
  }

  function handleRegisterValidation(event) {
    const firstName = getElement('firstName');
    const lastName = getElement('lastName');
    const email = getElement('email');
    const password = getElement('password');
    const confirmPassword = getElement('confirmPassword');
    const submitBtn = document.querySelector('button[type="submit"]');

    let isValid = true;

    if (!validateField(firstName, 'First name')) isValid = false;
    if (!validateField(lastName, 'Last name')) isValid = false;
    if (!validateEmail(email)) isValid = false;
    if (!validatePasswords(password, confirmPassword)) isValid = false;

    if (!isValid) {
      event.preventDefault(); // prevent form submission
      return;
    }

    // âœ… Only disable if validation passes
    submitBtn.disabled = true;
    submitBtn.textContent = 'Processing...';
  }

  function attachValidation() {
    const form = getElement('registerForm');
    if (form) {
      form.addEventListener('submit', handleRegisterValidation);
    }
  }

  window.onload = attachValidation;
</script>

  
</body>
</html>
